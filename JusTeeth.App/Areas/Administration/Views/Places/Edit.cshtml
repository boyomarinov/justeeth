@model JusTeeth.App.Areas.Administration.ViewModels.PlaceViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Administration/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset class="form-horizontal">
        <legend>Place</legend>

        @Html.HiddenFor(model => model.Id)

        <div class="control-group">
            @Html.LabelFor(model => model.Name, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.AlternativeName, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.AlternativeName)
                @Html.ValidationMessageFor(model => model.AlternativeName, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.Address, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.Address)
                @Html.ValidationMessageFor(model => model.Address, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.Latitude, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.Latitude)
                @Html.ValidationMessageFor(model => model.Latitude, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.Longitude, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.Longitude)
                @Html.ValidationMessageFor(model => model.Longitude, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.EatTime, new { @class = "control-label" })
            <div class="controls">
                @Html.DropDownList("EatTime", Model.EatTypeItems)
                @Html.ValidationMessageFor(model => model.EatTime, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.Rating, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.Rating)
                @Html.ValidationMessageFor(model => model.Rating, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.MonthRating, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.MonthRating)
                @Html.ValidationMessageFor(model => model.MonthRating, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.PriceType, new { @class = "control-label" })
            <div class="controls">
                @Html.DropDownList("PriceType", Model.PriceTypeItems)
                @Html.ValidationMessageFor(model => model.PriceType, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.Description, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.Description)
                @Html.ValidationMessageFor(model => model.Description, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="form-actions no-color">
            <input type="submit" value="Save" class="btn btn-warning" />
        </div>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

